import { VerticalBox, Button, Palette, Slider } from "std-widgets.slint";

export component App inherits Window {
    in property <image> video-frame <=> image.source;
    in property <bool> playing;

    pure callback toggle-pause-play();
    callback open-file;

    preferred-width: image.width;
    preferred-height: image.height;
    min-width: 500px;
    min-height: 300px;
    title: "Slint FFMPEG Example";
    background: #000000;

    states [
        shown when area.has-hover || animation-tick() < 5s : {
            controls.opacity: 1;
            in {
                animate controls.opacity {
                    duration: 50ms;
                }
            }
        }
        hidden when !area.has-hover: {
            controls.opacity: 0;
            in {
                animate controls.opacity {
                    delay: 3s;
                    duration: 500ms;
                }
            }
        }
    ]

    VerticalBox {
        Button {
            height: 30px;
            text: "Open";
            clicked => {
                root.open-file();
            }
        }
        image := Image {
            min-height: 200px;
        }
        
    }

    area := TouchArea {
        width: root.width - 20px;
        height: self.preferred-height;
        y: root.height - self.height - 20px;

        VerticalLayout {
            spacing: 5px;

            Slider {
                width: image.width;
                height: 13px;
            }

            controls := Rectangle {
                border-radius: 4px;
                background: Palette.color-scheme == ColorScheme.dark ? #d3d3d375 : #ffffff82;
                padding: 5px;

                Image {
                    width: 35px;
                    height: 35px;
                    source: root.playing ? @image-url("../icons/pause.svg") : @image-url("../icons/play.svg");
                }

                TouchArea {
                    clicked => {
                        root.toggle-pause-play();
                    }
                }
            }
        }
    }
}
